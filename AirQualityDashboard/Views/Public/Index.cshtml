@model List<AirQualityDashboard.ViewModels.SensorViewModel>


@{
    ViewData["Title"] = "Real-time Air Quality Monitoring - Colombo";
}

<!-- Load Leaflet -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<style>
    body, html {
        margin: 0;
        padding: 0;
        height: 100%;
    }

    #map {
        width: 100%;
        height: 100vh;
    }

    .legend {
        background: white;
        padding: 10px;
        font-size: 12px;
        line-height: 18px;
        color: #555;
    }

        .legend i {
            width: 18px;
            height: 18px;
            float: left;
            margin-right: 8px;
            opacity: 0.7;
        }

    .top-right-links {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 1000;
    }

        .top-right-links a {
            margin-left: 10px;
            color: #007bff;
            text-decoration: none;
        }
</style>

<div id="map"></div>

<div class="top-right-links">
    <a href="/Account/Login">Login</a> |
    <a href="/Account/Register">Register</a>
</div>

<script>
    var map = L.map('map').setView([6.9271, 79.8612], 11); // Colombo center

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    function getColor(aqi) {
        if (aqi <= 50) return "#009966";      // Good
        if (aqi <= 100) return "#ffde33";     // Moderate
        if (aqi <= 150) return "#ff9933";     // Unhealthy for sensitive groups
        if (aqi <= 200) return "#cc0033";     // Unhealthy
        if (aqi <= 300) return "#660099";     // Very Unhealthy
        return "#7e0023";                     // Hazardous
    }

    @foreach (var sensor in Model)
    {
        var markerColor = "getColor(@sensor.CurrentAQI)";
        <text>
            var marker = L.marker([@sensor.Latitude, @sensor.Longitude], {
                icon: L.divIcon({
                    className: 'custom-div-icon',
                    html: `<div style="background-color:${getColor(@sensor.CurrentAQI)}; color: #fff; border-radius: 5px; padding: 4px 6px; font-weight:bold;">
                @sensor.CurrentAQI
                           </div>`,
                    iconSize: [30, 42],
                    iconAnchor: [15, 42]
                })
            }).addTo(map);

            marker.bindPopup(`
                <b>@sensor.LocationName</b><br/>
                <div style="background-color:${getColor(@sensor.CurrentAQI)}; color: black; padding: 5px; margin-top:5px;">
                    😊 @sensor.CurrentAQI - @(sensor.CurrentAQI <= 50 ? "Good" :
                       sensor.CurrentAQI <= 100 ? "Moderate" :
                       sensor.CurrentAQI <= 150 ? "Unhealthy for Sensitive Groups" :
                       sensor.CurrentAQI <= 200 ? "Unhealthy" :
                       sensor.CurrentAQI <= 300 ? "Very Unhealthy" : "Hazardous")
                </div>
                <small>updated just now</small><br/>
                <img src="/images/sensors/@sensor.Id-mini-chart.png" width="200" /><br/>
                <img src="/images/sensors/@sensor.Id-heatmap.png" width="200" />
            `);
        </text>
    }

    var legend = L.control({position: 'bottomright'});

    legend.onAdd = function (map) {
        var div = L.DomUtil.create('div', 'legend'),
            grades = [0, 50, 100, 150, 200, 300],
            labels = ['Good', 'Moderate', 'Unhealthy (Sensitive)', 'Unhealthy', 'Very Unhealthy', 'Hazardous'];

        for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                labels[i] + '<br>';
        }

        return div;
    };

    legend.addTo(map);
</script>
